<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="siso.project.repository.UsersMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into users (user_name, user_id, password, date_of_birth, address, phone_number, alone, team_id,
        users_location_id, admin_id, village_hall_id)
        values (#{userName}, #{userId}, #{password}, #{dateOfBirth}, #{address}, #{phoneNumber}, #{alone}, #{teamId},
        #{usersLocationId}, #{adminId}, #{villageHallId})
    </insert>

    <update id="update" parameterType="Users">
        update users
        <set>
            <if test="updateParam.userName != null">
                user_name=#{updateParam.userName},
            </if>
            <if test="updateParam.userId != null">
                user_id=#{updateParam.userId},
            </if>
            <if test="updateParam.password != null">
                password=#{updateParam.password},
            </if>
            <if test="updateParam.dateOfBirth != null">
                date_of_birth=#{updateParam.dateOfBirth},
            </if>
            <if test="updateParam.address != null">
                address=#{updateParam.address},
            </if>
            <if test="updateParam.phoneNumber != null">
                phone_number=#{updateParam.phoneNumber},
            </if>
            <if test="updateParam.alone != null">
                alone=#{updateParam.alone},
            </if>
            <if test="updateParam.teamId != null">
                team_id=#{updateParam.teamId},
            </if>
            <if test="updateParam.teamId == null">
                team_id=null,
            </if>
            <if test="updateParam.adminId != null">
                admin_id=#{updateParam.adminId},
            </if>
            <if test="updateParam.adminId == null">
                admin_id=null,
            </if>
            <if test="updateParam.usersLocationId != null">
                users_location_id=#{updateParam.usersLocationId},
            </if>
            <if test="updateParam.villageHallId != null">
                village_hall_id=#{updateParam.villageHallId},
            </if>
        </set>
        <where>
            Id = #{id}
        </where>
    </update>

    <update id="updateVillageHall">
        update users
        <set>
            village_hall_id=#{villageHallId},
        </set>
        <where>
            Id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from users where id=#{id}
    </delete>


    <select id="findById" resultType="Users">
        select user_name, user_id, password, date_of_birth, address, phone_number, alone, team_id, admin_id,
        users_location_id, village_hall_id
        from users
        <where>
            Id = #{id}
        </where>
    </select>

    <select id="select" resultType="Users">
        select id, user_name, user_id, password, date_of_birth, address, phone_number, alone, team_id, admin_id,
        users_location_id, village_hall_id
        from users
        <where>
            <if test="searchParam.userName != null and searchParam.userName != ''">
                and user_name = #{searchParam.userName}
            </if>
            <if test="searchParam.phoneNumber != null and searchParam.phoneNumber != ''">
                and phone_number = #{searchParam.phoneNumber}
            </if>
            <if test="searchParam.userId != null and searchParam.userId != ''">
                and user_id = #{searchParam.userId}
            </if>
            <if test="adminId != null and adminId != ''">
                and admin_id = #{adminId}
            </if>
        </where>
    </select>

    <select id="findUserInfoTeamState" resultType="UserInfoTeamStateVO">
        SELECT users.id, users.user_name, users.date_of_birth, users.address, users.phone_number, users.alone,
        users.team_id, teams.team_name, teams.team_address, users.users_location_id, users.village_hall_id,
        users_state.date, users_state.attendance_state, users_state.hall_state
        FROM users
        LEFT OUTER JOIN teams
        ON users.team_id = teams.id
        LEFT OUTER JOIN (select users_state.Id, max(users_state.date) as date, users_state.attendance_state,
        users_state.hall_state, users_state.users_id from users_state group by users_state.users_id) users_state
        ON users.id = users_state.users_id
        <where>
            and users.admin_id = #{adminId}
            <if test="searchParam.userName != null and searchParam.userName != ''">
                and user_name = #{searchParam.userName}
            </if>
            <if test="searchParam.phoneNumber != null and searchParam.phoneNumber != ''">
                and phone_number = #{searchParam.phoneNumber}
            </if>
            <if test="date != null">
                and users_state.date >= #{date}
            </if>
        </where>
    </select>

    <select id="findUserInfo" resultType="UserInfoVO">
        SELECT users.id, users.user_name, users.date_of_birth, users.address, users.phone_number, users.alone,
        users.team_id, teams.team_name, teams.team_address, users.users_location_id, users.village_hall_id,
        users_state.date as user_state_date, users_state.attendance_state, users_state.hall_state,
        users_location.address as location_address, users_location.lat as location_lat, users_location.lon as
        location_lon, users_location.time as location_time,
        village_hall.hall_name as village_hall_name, village_hall.lat as villageHall_lat, village_hall.lon as
        villageHall_lon, village_hall.address as village_hall_address
        FROM users
        LEFT OUTER JOIN teams
        ON users.team_id = teams.id
        LEFT OUTER JOIN (select * from users_state group by users_state.users_id having max(date)) users_state
        ON users.id = users_state.users_id
        LEFT OUTER JOIN users_location
        ON users.users_location_id = users_location.id
        LEFT OUTER JOIN village_hall
        ON users.village_hall_id = village_hall.id
        <where>
            and users.id = #{userId}
        </where>
    </select>


</mapper>